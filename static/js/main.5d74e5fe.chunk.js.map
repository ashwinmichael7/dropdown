{"version":3,"sources":["components/App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","selectedFirstItem","setselectedFirstItem","selectedSecondItem","setselectedSecondItem","selectedThirdItem","setselectedThirdItem","selectedForthItem","setselectedForthItem","newCat","setnewCat","selectedFirstCat","setselectedFirstCat","Name","SubContent","navJson","navClick","text","level","className","map","value","length","onClick","e","innerValue","secondinnerValue","thirdinnerValue","type","onKeyUp","currentTarget","onChange","disabled","forEach","index","push","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d74e5fe.chunk.js","sourcesContent":["\r\nimport './App.css';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\r\nimport React from 'react';\r\n\r\nfunction App() {\r\n\r\n  const [selectedFirstItem, setselectedFirstItem] = React.useState('');\r\n  const [selectedSecondItem, setselectedSecondItem] = React.useState('');\r\n  const [selectedThirdItem, setselectedThirdItem] = React.useState('');\r\n  const [selectedForthItem, setselectedForthItem] = React.useState('');\r\n  const [newCat, setnewCat] = React.useState('');\r\n  const [selectedFirstCat, setselectedFirstCat] = React.useState('');\r\n  const [navJson, setnavJson] = React.useState([\r\n    {\r\n      Name: 'Home Page',\r\n      SubContent: []\r\n    },\r\n    {\r\n      Name: 'Left dropdown',\r\n      SubContent: [{\r\n        Name: 'Any page',\r\n        SubContent: []\r\n      },\r\n      {\r\n        Name: 'Second level',\r\n        SubContent: [\r\n          {\r\n            Name: 'Another page',\r\n            SubContent: []\r\n          },\r\n          {\r\n            Name: 'Any page',\r\n            SubContent: []\r\n          },\r\n          {\r\n            Name: 'Third level',\r\n            SubContent: [\r\n              {\r\n                Name: 'Any Page',\r\n                SubContent:[]\r\n              },\r\n              {\r\n                Name: 'Another Page',\r\n                SubContent:[]\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        Name: 'Another page',\r\n        SubContent: []\r\n      }]\r\n    },\r\n    {\r\n      Name: 'Mega Menu',\r\n      SubContent: [{\r\n        Name: 'xxx',\r\n        SubContent: []\r\n      }]\r\n    },\r\n    {\r\n      Name: 'Any page',\r\n      SubContent: []\r\n    },\r\n    {\r\n      Name: 'Right dropdown',\r\n      SubContent: [{\r\n        Name: 'xxx',\r\n        SubContent: []\r\n      }]\r\n    }\r\n  ]);\r\n\r\n\r\n  const navClick = (text, level) => {\r\n    \r\n    if (level === \"first\") {\r\n      if (selectedFirstItem === \"\" || selectedFirstItem !== text ) {\r\n        setselectedForthItem('');\r\n        setselectedThirdItem('');\r\n        setselectedSecondItem('');\r\n        setselectedFirstItem(text);\r\n      } else {\r\n        setselectedForthItem('');\r\n        setselectedThirdItem('');\r\n        setselectedSecondItem('');\r\n        setselectedFirstItem('');\r\n      }\r\n    } else if (level === \"second\") {\r\n      if (selectedSecondItem === \"\" || selectedSecondItem !== text ) {\r\n        setselectedForthItem('');\r\n        setselectedThirdItem('');\r\n        setselectedSecondItem(text);\r\n      } else {\r\n        setselectedForthItem('');\r\n        setselectedThirdItem('');\r\n        setselectedSecondItem('');\r\n      }\r\n    } else if (level === \"third\") {\r\n      if (selectedThirdItem === \"\" || selectedThirdItem !== text ) {\r\n        setselectedForthItem('');\r\n        setselectedThirdItem(text);\r\n      } else {\r\n        setselectedThirdItem('');\r\n      }\r\n    } else if (level === \"forth\") {\r\n      if (selectedForthItem === \"\" || selectedForthItem !== text ) {\r\n        setselectedForthItem(text);\r\n      } else {\r\n        setselectedForthItem('');\r\n      }\r\n    }\r\n  }\r\n\r\n  const submitCat = () =>{\r\n    const tempStorage = [...navJson];\r\n    tempStorage.forEach((value, index)=>{\r\n      if( value.Name === selectedFirstCat ){\r\n        value.SubContent.push({Name: newCat, SubContent:[]});\r\n        console.log(newCat);\r\n      }\r\n    })\r\n  }\r\n\r\n  return ( \r\n    <div className=\"App\">\r\n      <div className=\"App-header\">\r\n        <div className=\"content-wrapper\">\r\n          { navJson.map((value)=>{\r\n            return(\r\n              <div className=\"nav-item\">\r\n                {value.Name}\r\n                { value.SubContent.length != 0 ? \r\n                    selectedFirstItem === value.Name ?\r\n                    <>\r\n                      <span  onClick={(e)=>navClick(value.Name, 'first')}>\r\n                        <ArrowDropUpIcon />\r\n                      </span>\r\n                      <div className=\"innerContent\">\r\n                        { value.SubContent.map((innerValue)=>{\r\n                          return(\r\n                            <div className=\"inner-navitem\">\r\n                              { innerValue.Name }\r\n                              { innerValue.SubContent.length != 0 ? \r\n                                  selectedSecondItem === innerValue.Name ?\r\n                                  <>\r\n                                    <span onClick={()=>navClick(innerValue.Name, 'second')}>\r\n                                      <ArrowDropUpIcon />\r\n                                    </span>\r\n                                    <div className=\"secondinnerContent\">\r\n                                    { innerValue.SubContent.map((secondinnerValue)=>{\r\n                                      return(\r\n                                        <div className=\"inner-navitem\">\r\n                                          { secondinnerValue.Name }\r\n                                          { secondinnerValue.SubContent.length != 0 ? \r\n                                              selectedThirdItem === secondinnerValue.Name ?\r\n                                              <>\r\n                                                <span onClick={()=>navClick(secondinnerValue.Name, 'third')}>\r\n                                                  <ArrowDropDownIcon />\r\n                                                </span>\r\n                                                <div className=\"thirdinnerContent\">\r\n                                                  { secondinnerValue.SubContent.map((thirdinnerValue)=>{\r\n                                                      return(\r\n                                                        <div className=\"inner-navitem\">\r\n                                                          { thirdinnerValue.Name }\r\n                                                          { thirdinnerValue.SubContent.length != 0 ? \r\n                                                              selectedForthItem === thirdinnerValue.Name ?\r\n                                                              <>\r\n                                                                <span onClick={()=>navClick(thirdinnerValue.Name, 'forth')}>\r\n                                                                  <ArrowDropDownIcon />\r\n                                                                </span>\r\n                                                                \r\n                                                              </>\r\n                                                              :\r\n                                                              <span onClick={()=>navClick(thirdinnerValue.Name, 'forth')}>\r\n                                                                <ArrowDropDownIcon />\r\n                                                              </span>\r\n                                                              :\r\n                                                              null\r\n                                                          }\r\n                                                        </div>\r\n                                                      );\r\n                                                    }) }\r\n                                                  </div>\r\n                                              </>\r\n                                              :\r\n                                              <span onClick={()=>navClick(secondinnerValue.Name, 'third')}>\r\n                                                <ArrowDropDownIcon />\r\n                                              </span>\r\n                                              :\r\n                                              null\r\n                                          }\r\n                                        </div>\r\n                                      );\r\n                                    }) }\r\n                                  </div>\r\n                                  </>\r\n                                  :\r\n                                  <span onClick={()=>navClick(innerValue.Name, 'second')}>\r\n                                    <ArrowDropDownIcon />\r\n                                  </span>\r\n                                  :\r\n                                  null\r\n                              }\r\n                            </div>\r\n                          );\r\n                        }) }\r\n                      </div>\r\n                    </>\r\n                    :\r\n                    <span onClick={()=>navClick(value.Name, 'first')}>\r\n                      <ArrowDropDownIcon />\r\n                    </span>\r\n                  :\r\n                  null\r\n                }\r\n              </div>\r\n            );\r\n          })  }\r\n        </div>\r\n        <div className=\"bodywrapper\">\r\n          <div className=\"Body-head\">\r\n            Add a New Category\r\n          </div>\r\n          <div className=\"Body-Content\">\r\n              <div className=\"Body-title\">\r\n                Category Name\r\n              </div>\r\n              <div className=\"Body-Input\">\r\n                <input type=\"text\" className=\"inputField\" onKeyUp={(e)=>{setnewCat(e.currentTarget.value)}}></input>\r\n              </div>\r\n              <div className=\"Body-title\">\r\n                Parent Category\r\n              </div>\r\n              <div className=\"Body-Input\">\r\n                <select className=\"selectField\" onChange={(e)=>setselectedFirstCat(e.currentTarget.value)}>\r\n                  <option disabled>Choose a parent</option>\r\n                  { navJson.map((value)=>{\r\n                    return(\r\n                      <option value={value.Name}>{value.Name}</option>\r\n                    );\r\n                  }) }\r\n                </select>\r\n              </div>\r\n              <button className=\"buttonClass\" onClick={()=>submitCat()}>Add Category</button>\r\n          </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}